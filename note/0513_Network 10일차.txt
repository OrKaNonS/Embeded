### Java Network ###

TCP/IP, UDP, http, https, ftp 등의 p는 Portocol
Protocol : 통신규약, 통신간의 약속

TCP : 지속 연결
HTTP : 비연결_필요할때만 연결 즉 필요할 떄 연결했다가 데이터 보내주면 연결을 끊음
HTTPS : S은 보안을 뜻함

# 네트워크 기본 개념 #
 * Protocol : 서로 다른 노드(node, 네트워크 상에 연결된 모든 식별 가능한 디바이스) 간에 통신하기 위한 규약

 * TCP (Transfer Control Protocol) _ 카카오톡 등
  - 신뢰성 있는 통신(데이터 손실X)을 하기 위해 데이터를 보낸 후 echo신호를 받음.(echo신호 : 신호를 주면 신호를 받아야 함)
  - 데이터의 신뢰도가 보장되는 반면 속도가 UDP에 비해 느리다.
  - HTTP, FTP 등 다른 프로토콜의 상위 프로토콜이다.
  - 1:1 통신에 많이 사용
  - 연결지향형 프로토콜 : 서로 연결된 상태에서 전송/수신(Stateful) _ 중간에 끊기지 않고 다 끝나면 연결을 끊음

* IP(Internet Protocol)
  - 인터넷 상에서 노드의 주소를 검색하기 위한 프로토콜

 * UDP(User Datagram Protocol) _ 영상 서비스 하는 사이트
  - 신뢰성 보다는 속도를 우선시 하는 프로토콜
  - 미디어(음악, 영화) 파일들을 불특정 다수에게 대량으로 전송하기 위해 쓰임
  - 1:다 통신에 많이 사용

 * HTTP(HyperText Transfer Protocol)
  - 하이퍼텍스트(웹링크) 전송을 위한 프로토콜
  - TCP/IP의 하위프로토콜_신뢰성 있음
  - 비연결지양형 프로토콜 : 연결해서 데이터 전송/수신 후에 연결을 끊는다.
   * 지속연결되어 있으면 속도가 느려짐으로 

 * HTTPS(HyperText Transfer Protocol Secure)
  - HTTP는 일반텍스트로 데이터를 주고 받아서 보안에 취약함
  - HTTPS는 데이터를 주고 받을때 암호화/복호화 과정을 거쳐서 네트워크상에 암호화된 데이터를 송수신

 * FTO (File Transfer Protocol)
  - TCP/IP의 하위프로토콜
  - 파일 송수신할 때 사용되는 프로토콜

 * SMTP(Simple Mail Transfer Protocol)
  - 메일 송신할 떄 사용되는 프로토콜

* Socket
  - 논리적 연결
  - TCP 상에서 노드들은 각자의 소켓을 통해 데이터를 송/수신

 * ServerSocket
  - 서버에 연결을 요청하는 클라이언트를 위해 존재하는 소켓
  - 클라이언트가 연결을 요청하면 서버에서는 소켓객체를 하나 생성해서
    클라이언트에 할당

 * Port
  - 노드가 가지고 있는 논리적 연결점
  - 0 ~ 65535까지의 정수로 되어있음.
  - 0~1024번까지는 시스템이 예약해서 사용하는 포트
  - 모든 통신을 하기 위해서는 IP주소, Port번호가 필요함

※ 물리적 주소(cmd - ipcong /all) : Mac IP




